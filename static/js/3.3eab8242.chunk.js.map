{"version":3,"sources":["components/InputForm/InputForm.module.css","components/Filter/Filter.module.css","components/PbookList/PbookList.module.css","components/InputForm/InputForm.jsx","redux/entries/entries-operations.js","components/Filter/Filter.jsx","redux/entries/entries-selectors.js","components/PbookList/PbookList.jsx","views/ContactsView/ContactsView.jsx"],"names":["module","exports","InputForm","state","name","number","onNameInput","event","setState","target","value","onNumberInput","onSubmitEntry","preventDefault","props","onAddEntry","reset","className","styles","newEntrySection","onSubmit","this","type","onChange","required","newEntryButton","React","Component","connect","dispatch","entry","addEntryRequest","axios","post","then","responce","data","addEntrySuccess","catch","error","addEntryError","message","addEntry","Filter","filterChangeHandler","onChangeFilter","getLoadingState","contacts","items","loading","getFilteredContacts","createSelector","entries","filter","filterValue","includes","PbookList","onFetchEntries","onDelete","pbookHeader","pbookList","map","controlBtnContainer","entryControlBtn","data-id","id","onClick","dataset","deleteEntryRequest","delete","deleteEntrySuccess","deleteEntryError","fetchEntriesRequest","get","fetchEntriesSuccess","fetchEntriesError","ContactsView"],"mappings":"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","file":"static/js/3.3eab8242.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newEntrySection\":\"InputForm_newEntrySection__3MAYT\",\"newEntryButton\":\"InputForm_newEntryButton__QVFt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2w0pg\",\"filter-label\":\"Filter_filter-label__up8oZ\",\"filter-input\":\"Filter_filter-input__3L1Nu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"PbookList_entry__3W4j-\",\"pbookList\":\"PbookList_pbookList__O4aqN\",\"pbookHeader\":\"PbookList_pbookHeader__2KpvO\",\"controlBtnContainer\":\"PbookList_controlBtnContainer__7veH8\",\"entryControlBtn\":\"PbookList_entryControlBtn__3XtQk\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addEntry } from \"../../redux/entries/entries-operations\";\nimport styles from \"./InputForm.module.css\";\n\nclass InputForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onNameInput = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onNumberInput = (event) => {\n    this.setState({ number: event.target.value });\n  };\n\n  onSubmitEntry = (event) => {\n    event.preventDefault();\n    this.props.onAddEntry(this.state);\n    event.target.reset();\n  }\n\n  render() {\n    return (\n      <section className={styles.newEntrySection}>\n        <form className=\"inputForm\" onSubmit={this.onSubmitEntry}>\n          <label className=\"inputLabel\">\n            First / Last name :\n            <input\n              className=\"inputField\"\n              type=\"text\"\n              onChange={this.onNameInput}\n              required\n            />\n          </label>\n          <label className=\"inputLabel\">\n            Phone number :\n            <input\n              className=\"inputField\"\n              type=\"tel\"\n              onChange={this.onNumberInput}\n              required\n            />\n          </label>\n          <button className={styles.newEntryButton} type=\"submit\">\n            Add entry\n          </button>\n        </form>\n      </section>\n    );\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddEntry: entry => dispatch(addEntry(entry)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputForm);\n","import axios from 'axios';\n\nimport {\n    addEntryRequest,\n    addEntrySuccess,\n    addEntryError,\n    deleteEntryRequest,\n    deleteEntrySuccess,\n    deleteEntryError,\n    fetchEntriesRequest,\n    fetchEntriesSuccess,\n    fetchEntriesError,\n} from './entries-actions';\n\nexport const fetchEntries = () => dispatch => {\n    dispatch(fetchEntriesRequest());\n    axios.get('/contacts')\n        .then(responce => dispatch(fetchEntriesSuccess(responce.data)))\n        .catch(error => dispatch(fetchEntriesError(error.message)))\n}\n\nexport const addEntry = entry => dispatch => {\n\n    dispatch(addEntryRequest());\n    axios.post('/contacts', entry)\n        .then(responce => responce.data)\n        .then(data => dispatch(addEntrySuccess(data)))\n        .catch(error => { dispatch(addEntryError(error.message)) })\n}\n\nexport const deleteEntry = id => dispatch => {\n\n    dispatch(deleteEntryRequest());\n    axios.delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteEntrySuccess(id)))\n        .catch(error => dispatch(deleteEntryError(error.message)))\n}\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { onChangeFilter } from \"../../redux/filter/filter-actions\";\nimport styles from \"./Filter.module.css\";\n\nclass Filter extends React.Component {\n\n  filterChangeHandler = (event) => {\n    this.props.onChangeFilter(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className={styles[\"filter\"]}>\n        <label className={styles[\"filter-label\"]}>\n          Find contacts by name\n          <br />\n          <input\n            className={styles[\"filter-input\"]}\n            type=\"text\"\n            onChange={this.filterChangeHandler}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (value) => dispatch(onChangeFilter(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import { createSelector } from 'reselect';\n\nconst getAllEntries = state => state.contacts.items.entries;\nconst getFilterState = state => state.contacts.filter;\nexport const getLoadingState = state => state.contacts.items.loading;\n\nexport const getFilteredContacts = createSelector(\n    [getAllEntries, getFilterState],\n    (entries, filterValue) => entries.filter((entry) => entry.name.includes(filterValue))\n)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteEntry,\n  fetchEntries,\n} from \"../../redux/entries/entries-operations\";\nimport { getLoadingState } from \"../../redux/entries/entries-selectors\";\nimport { getFilteredContacts } from \"../../redux/entries/entries-selectors\";\nimport styles from \"./PbookList.module.css\";\n\nclass PbookList extends React.Component {\n  \n  componentDidMount() {\n    this.props.onFetchEntries();\n  }\n\n  render() {\n    const { entries, onDelete } = this.props;\n    return (\n      <section>\n        <div className={`${styles.entry} ${styles.pbookHeader}`}>\n          <span>Name</span>\n          <span>Phone number</span>\n          <span>Actions</span>\n        </div>\n        <ul className={styles.pbookList}>\n          {entries.map((entry) => (\n            <li key={entry.id} className={styles.entry}>\n              <span>{entry.name}</span>\n              <span>{entry.number}</span>\n              <div className={styles.controlBtnContainer}>\n                <button\n                  className={styles.entryControlBtn}\n                  type=\"button\"\n                  data-id={entry.id}\n                  onClick={onDelete}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  entries: getFilteredContacts(state),\n  loading: getLoadingState(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (event) => dispatch(deleteEntry(event.target.dataset.id)),\n  onFetchEntries: () => dispatch(fetchEntries()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PbookList);\n","import React from 'react';\r\nimport InputForm from \"../../components/InputForm/\";\r\nimport Filter from \"../../components/Filter\";\r\nimport PbookList from \"../../components/PbookList\";\r\n\r\nconst ContactsView = () => {\r\n    return (\r\n      <div className=\"container\">\r\n            <h1>PhoneBook / home</h1>\r\n            <InputForm />\r\n            <Filter />\r\n            <PbookList />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ContactsView;"],"sourceRoot":""}