{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/filter/filter-actions.js","redux/auth/auth-actions.js","components/AuthMenu/AuthMenu.module.css","redux/entries/entries-actions.js","redux/entries/entries-reducer.js","redux/filter/filter-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/UserMenu/UserMenu.jsx","components/AuthMenu/AuthMenu.jsx","components/NavHeader/NavHeader.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["isAuthentificated","state","auth","isLoggedIn","currentUserEmail","user","email","currentUserName","name","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","message","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","module","exports","onChangeFilter","createAction","addEntryRequest","addEntrySuccess","addEntryError","deleteEntryRequest","deleteEntrySuccess","deleteEntryError","fetchEntriesRequest","fetchEntriesSuccess","fetchEntriesError","entries","createReducer","_","payload","number","id","filter","entry","alert","loading","combineReducers","filterReducer","action","initialUserState","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","contactsReducer","items","entryReducer","rootReducer","persistReducer","authReducer","contacts","store","configureStore","reducer","persistor","persistStore","connect","onLogout","authOps","className","activeClassName","exact","to","styles","userMenu","userEmail","logoutBtn","type","onClick","AuthMenu","userNav","Component","component","redirectTo","routeProps","render","props","restricted","DefaultView","lazy","LoginView","RegisterView","ContactsView","DefaultLoggedInView","App","this","onGetCurrentUser","fallback","path","mapDispatchToProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a953dd10.chunk.js","sourcesContent":["const isAuthentificated = state => state.auth.isLoggedIn;\r\nconst currentUserEmail = state => state.auth.user.email;\r\nconst currentUserName = state => state.auth.user.name;\r\n\r\nexport { isAuthentificated, currentUserEmail, currentUserName };","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n     },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ``;\r\n    }\r\n}\r\n\r\nconst register = credentials => dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    axios.post('/users/signup', credentials)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(authActions.registerSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(authActions.registerError(error.message)));\r\n}\r\n\r\nconst login = credentials => dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n    axios.post('/users/login', credentials)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(authActions.loginSuccess(response.data))\r\n        })\r\n        .catch(error => dispatch(authActions.loginError(error.message)));\r\n}\r\n\r\nconst logout = () => dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n    axios.post('/users/logout')\r\n        .then(() => {\r\n            token.unset();\r\n            dispatch(authActions.logoutSuccess())\r\n        })\r\n        .catch(error => dispatch(authActions.logoutError(error.message)));\r\n}\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const persistedToken = getState().auth.token;\r\n    if (!persistedToken) return;\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest);\r\n    axios.get('/users/current')\r\n        .then(response => dispatch(authActions.getCurrentUserSuccess(response.data)))\r\n        .catch(error => dispatch(authActions.getCurrentUserError(error.message)));\r\n}\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__10Rq8\",\"userEmail\":\"UserMenu_userEmail__2ct5G\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const onChangeFilter = createAction('changeFilter');\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"AuthMenu_userMenu__UcqyA\",\"userEmail\":\"AuthMenu_userEmail__2XGAU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addEntryRequest = createAction('entry/addEntryRequest');\nexport const addEntrySuccess = createAction('entry/addEntrySuccess');\nexport const addEntryError = createAction('entry/addEntryError');\n\nexport const deleteEntryRequest = createAction('entry/deleteEntryRequest');\nexport const deleteEntrySuccess = createAction('entry/deleteEntrySuccess');\nexport const deleteEntryError = createAction('entry/deleteEntryError');\n\nexport const fetchEntriesRequest = createAction('entry/fetchEntriesRequest');\nexport const fetchEntriesSuccess = createAction('entry/fetchEntriesSuccess');\nexport const fetchEntriesError = createAction('entry/fetchEntriesError');\n\n","\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n    fetchEntriesRequest,\n    fetchEntriesSuccess,\n    fetchEntriesError,\n    addEntryRequest,\n    addEntrySuccess,\n    addEntryError,\n    deleteEntryRequest,\n    deleteEntrySuccess,\n    deleteEntryError,\n} from './entries-actions';\n\nconst entries = createReducer([], {\n    [fetchEntriesSuccess]: (_, { payload }) => payload,\n    [addEntrySuccess]: (state, { payload }) => [...state, { name: payload.name, number: payload.number, id: payload.id }],\n    [deleteEntrySuccess]: (state, { payload }) => state.filter(entry => entry.id !== payload),\n});\n\nconst error = createReducer('', {\n    [fetchEntriesError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n    [addEntryError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n    [deleteEntryError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n})\n\nconst loading = createReducer(false, {\n    [fetchEntriesRequest]: () => true,\n    [fetchEntriesSuccess]: () => false,\n    [addEntryRequest]: () => true,\n    [addEntrySuccess]: () => false,\n    [addEntryError]: () => false,\n    [deleteEntryRequest]: () => true,\n    [deleteEntrySuccess]: () => false,\n    [deleteEntryError]: () => false,\n})\n\nexport default combineReducers({\n    entries,\n    loading,\n    error,\n})\n","\nimport { onChangeFilter } from './filter-actions';\nimport { createReducer } from '@reduxjs/toolkit';\n\nexport const filterReducer = createReducer('',\n    {\n        [onChangeFilter]: (_, action) => action.payload\n    });","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n}\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getCurrentUserError]: (_, { payload }) => payload\r\n});\r\n\r\nconst isLoggedIn = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.logoutSuccess]: () => false,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    isLoggedIn,\r\n    error\r\n});","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport entryReducer from './entries/entries-reducer';\nimport { filterReducer } from './filter/filter-reducer';\nimport authReducer from './auth/auth-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token']\n}\n\nconst contactsReducer = combineReducers({\n    items: entryReducer,\n    filter: filterReducer,\n})\n\nconst rootReducer = combineReducers({\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n})\n\n\nconst store = configureStore({ reducer: rootReducer }, middleware);\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./UserMenu.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport authOps from '../../redux/auth/auth-operations';\r\n\r\nconst UserMenu = ({ email, onLogout }) => {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        className=\"navLink\"\r\n        activeClassName=\"activeNavLink\"\r\n        exact\r\n        to=\"/contacts\"\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n      <div className={styles.userMenu}>\r\n        <span className={styles.userEmail}>{email}</span>\r\n        <button className={styles.logoutBtn} type=\"button\" onClick={onLogout}>\r\n          Log out\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToPtops = (dispatch) => ({\r\n  onLogout: () => dispatch(authOps.logout()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToPtops)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthMenu.module.css\";\r\n\r\nconst AuthMenu = () => {\r\n  return (\r\n    <div className={styles.userNav}>\r\n      <NavLink\r\n        className=\"navLink\"\r\n        activeClassName=\"activeNavLink\"\r\n        exact\r\n        to=\"/login\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"navLink\"\r\n        activeClassName=\"activeNavLink\"\r\n        exact\r\n        to=\"/register\"\r\n      >\r\n        Register\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthMenu;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport AuthMenu from \"../AuthMenu\";\r\nimport {\r\n  isAuthentificated,\r\n  currentUserEmail,\r\n} from \"../../redux/auth/auth-selectors\";\r\n\r\nconst NavHeader = ({ isAuthentificated, currentUserEmail }) => {\r\n  return (\r\n    <header>\r\n      {isAuthentificated ? <UserMenu email={currentUserEmail} /> : <AuthMenu />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthentificated: isAuthentificated(state),\r\n  currentUserEmail: currentUserEmail(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavHeader);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthentificated } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthentificated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthentificated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthentificated: isAuthentificated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthentificated } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthentificated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthentificated && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthentificated: isAuthentificated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NavHeader from './components/NavHeader';\nimport authOps from './redux/auth/auth-operations'; \nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst DefaultView = lazy(() => import('./views/DefaultView'))\nconst LoginView = lazy(() => import('./views/LoginView'))\nconst RegisterView = lazy(() => import('./views/RegisterView'))\nconst ContactsView = lazy(() => import('./views/ContactsView'))\nconst DefaultLoggedInView = lazy(() => import('./views/DefaultLoggedInView'))\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <NavHeader />\n        <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute path='/login' component={LoginView} redirectTo='/contacts' restricted />\n          <PublicRoute path='/register' component={RegisterView} redirectTo='/contacts' restricted />\n          <PrivateRoute path='/contacts' component={ContactsView} redirectTo='/login' />\n          <PrivateRoute path='/home' component={DefaultLoggedInView} redirectTo='/login' />\n          <Route component={DefaultView} /> \n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOps.getCurrentUser,\n}\n\nexport default connect(null, mapDispatchToProps)(App) ;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}